package com.borqs.ai;

import android.content.ContentResolver;
import android.content.Context;
import android.net.Uri;
import android.util.Log;
import com.borqs.ai.provider.AutoInboxContent.Message;

public class Controller {
    private static Controller sInstance;
    private Context mContext = null;
    private MessagingController mMessagingController;
    private Controller(Context context) {
        mContext = context;
        mMessagingController = MessagingController.getInstance(mContext);
    }
    
    public synchronized static Controller getInstance(Context context) {
        if (sInstance == null) {
            sInstance = new Controller(context);
        }
        
        return sInstance;
    }

    /**
     * Launch a check to the server for new messages,
     * and persist the messages to the database
     */
    public synchronized void checkMessages() {
        new Thread() {
            // The process of the business MUST to be moved into MessagingController
            // to run from a blocking queue
            @Override
            public void run() {
                if (AutoInbox.DEBUG) {
                    Log.d(AutoInbox.TAG, "controller: check messages");
                }
                mMessagingController.checkMessages();
            }
        }.start();
    }
    
    /**
     * 
     * @param serverId
     */
    public synchronized void setMessageRead(final Message message) {
        new Thread() {
            @Override
            public void run() {
                // Next to move this to MessagingController to process in the queue
                if (AutoInbox.DEBUG) {
                    Log.d(AutoInbox.TAG, "controller: report message read, serverId=" + message.mServerId);
                }
                mMessagingController.setMessageRead(message);
            }
        }.start();
    }

    public void deleteMessage(final long messageId) {
    	new Thread() {
            @Override
            public void run() {
                // Next to move this to MessagingController to process in the queue
                if (AutoInbox.DEBUG) {
                    Log.d(AutoInbox.TAG, "controller: delete message, messageId=" + messageId);
                }
                mMessagingController.deleteMessage(messageId);
            }
        }.start();
    }
}
